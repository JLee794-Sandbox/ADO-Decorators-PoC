
pool:
  vmImage: "ubuntu-latest"

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - '/.ado/pipelines/pre-build-decorators-publish.yaml'
      - '/Build/Pre/*'
    exclude:
      - '/**/*.md'

variables:
  - group: decorator-publish-vars # Rename to whatever you named your variable group in the prerequisite stage of step 6
  - name: workingDirectory
    value: '/Build/Pre'
  # - name: ServiceConnection
  #   value: vsts-marketplace
  # - name: ExtensionName
  #   value: 'Demo Pipeline Decorators PRE'
  # - name: ExtensionID
  #   value: 'jinlesampledecoratorspre'
  - name: ArtifactName
    value: 'build.pre.vsix'


stages:
  - stage: Package_extension_and_publish_build_artifacts
    jobs:
      - job:
        steps:
      
          - checkout: self
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"
          - task: Bash@3
            inputs:
              script: ls -al 

          - task: Npm@1
            inputs:
              command: 'custom'
              workingDir: $(Agent.BuildDirectory)/$(workingDirectory) # Update to the name of the directory of your task
              verbose: true
              customCommand: 'i -g npm@next-7'
          

          - task: Bash@3
            inputs:
              workingDirectory: $(Agent.BuildDirectory)/$(workingDirectory)
              script: |
                # sudo npm install tfx-cli -g
                tfx extension create \
                  --manifest-globs vss-extension.json \
                  --rev-version \
                  --output-path $(Agent.TempDirectory)

          - task: CopyFiles@2
            displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
            inputs:
              Contents: "$(Agent.TempDirectory)/*.vsix"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: $(ArtifactName)
              publishLocation: 'Container'

  - stage: Download_build_artifacts_and_publish_the_extension
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: $(ArtifactName)
              downloadPath: $(System.DefaultWorkingDirectory)

          # - task: Bash@3
          #   inputs:
          #     workingDirectory: $(System.DefaultWorkingDirectory)
          #     script: |
          #       # sudo npm install tfx-cli -g
          #       tfx extension create \
          #         --manifest-globs vss-extension.json \
          #         --rev-version \
          #         --output-path $(Agent.TempDirectory)
          - task: PublishAzureDevOpsExtension@3
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: $(ServiceConnection)
              fileType: 'vsix'
              vsixFile: $(System.DefaultWorkingDirectory)/$(ArtifactName)
              extensionVisibility: 'private'
              extensionPricing: 'free'
        

              # publisherId: $(PublisherID)
              # extensionId: $(ExtensionID)
              # extensionName: $(ExtensionName)
